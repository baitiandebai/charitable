<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fouroo.nose.mapper.SocialPolicyMapper" >
  <resultMap id="BaseResultMap" type="com.fouroo.nose.entity.SocialPolicy" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="createid" property="createid" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="extra1" property="extra1" jdbcType="VARCHAR" />
    <result column="extra2" property="extra2" jdbcType="VARCHAR" />
    <result column="imagepath" property="imagepath" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.fouroo.nose.entity.SocialPolicy" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, createid, title, type, createtime, updatetime, extra1, extra2, imagepath
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from social_policy
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from social_policy
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fouroo.nose.entity.SocialPolicy" >
    insert into social_policy (id, createid, title, 
      type, createtime, updatetime, 
      extra1, extra2, imagepath, 
      content)
    values (#{id,jdbcType=INTEGER}, #{createid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{extra1,jdbcType=VARCHAR}, #{extra2,jdbcType=VARCHAR}, #{imagepath,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fouroo.nose.entity.SocialPolicy" >
    insert into social_policy
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createid != null" >
        createid,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="extra1 != null" >
        extra1,
      </if>
      <if test="extra2 != null" >
        extra2,
      </if>
      <if test="imagepath != null" >
        imagepath,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createid != null" >
        #{createid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="extra1 != null" >
        #{extra1,jdbcType=VARCHAR},
      </if>
      <if test="extra2 != null" >
        #{extra2,jdbcType=VARCHAR},
      </if>
      <if test="imagepath != null" >
        #{imagepath,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fouroo.nose.entity.SocialPolicy" >
    update social_policy
    <set >
      <if test="createid != null" >
        createid = #{createid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="extra1 != null" >
        extra1 = #{extra1,jdbcType=VARCHAR},
      </if>
      <if test="extra2 != null" >
        extra2 = #{extra2,jdbcType=VARCHAR},
      </if>
      <if test="imagepath != null" >
        imagepath = #{imagepath,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fouroo.nose.entity.SocialPolicy" >
    update social_policy
    set createid = #{createid,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      extra1 = #{extra1,jdbcType=VARCHAR},
      extra2 = #{extra2,jdbcType=VARCHAR},
      imagepath = #{imagepath,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fouroo.nose.entity.SocialPolicy" >
    update social_policy
    set createid = #{createid,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      extra1 = #{extra1,jdbcType=VARCHAR},
      extra2 = #{extra2,jdbcType=VARCHAR},
      imagepath = #{imagepath,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>